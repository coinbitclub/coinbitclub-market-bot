// TESTE DE CONFIGURA√á√ÉO IP FIXO MARKETBOT
// Execute este script para verificar se o IP fixo est√° configurado corretamente

console.log('üß™ TESTE DE CONFIGURA√á√ÉO IP FIXO MARKETBOT');
console.log('=' * 50);

// Simular vari√°veis de ambiente
console.log('\n1. üìä VERIFICANDO VARI√ÅVEIS DE AMBIENTE:');
console.log(`   RAILWAY_FIXED_IP: ${process.env.RAILWAY_FIXED_IP || 'N√ÉO DEFINIDO'}`);
console.log(`   NGROK_IP_FIXO: ${process.env.NGROK_IP_FIXO || 'N√ÉO DEFINIDO'}`);

// Testar detec√ß√£o de IP fixo
const RAILWAY_FIXED_IP = process.env.RAILWAY_FIXED_IP || process.env.NGROK_IP_FIXO || null;
console.log(`\n2. üåê IP FIXO DETECTADO: ${RAILWAY_FIXED_IP || 'N√ÉO CONFIGURADO'}`);

if (RAILWAY_FIXED_IP) {
  console.log('‚úÖ IP FIXO CONFIGURADO - Sistema usar√° IP espec√≠fico para exchanges');
  console.log('‚úÖ Configura√ß√£o conforme solicitada:');
  console.log('   - CoinStats API: Fear & Greed Index + BTC Dominance');
  console.log('   - Binance API: Market Pulse TOP100 (com IP fixo)');
  console.log('   - Bybit API: Market Pulse Fallback (com IP fixo)');
} else {
  console.log('‚ö†Ô∏è IP FIXO N√ÉO CONFIGURADO');
  console.log('üí° Para configurar, defina uma das vari√°veis:');
  console.log('   - RAILWAY_FIXED_IP=seu.ip.fixo.aqui');
  console.log('   - NGROK_IP_FIXO=seu.ip.fixo.aqui');
}

// Testar cria√ß√£o de agentes
const https = require('https');
const http = require('http');

function createOptimizedAgent(isHttps = true, useFixedIP = false) {
  const AgentClass = isHttps ? https.Agent : http.Agent;
  
  const config = {
    keepAlive: true,
    keepAliveMsecs: 30000,
    maxSockets: 100,
    maxFreeSockets: 50,
    timeout: 30000,
    freeSocketTimeout: 15000,
    socketActiveTTL: 60000
  };

  if (useFixedIP && RAILWAY_FIXED_IP) {
    config.localAddress = RAILWAY_FIXED_IP;
    console.log(`üîó Agente ${isHttps ? 'HTTPS' : 'HTTP'} configurado com IP fixo: ${RAILWAY_FIXED_IP}`);
  }
  
  return new AgentClass(config);
}

console.log('\n3. üîß TESTANDO CRIA√á√ÉO DE AGENTES:');
try {
  const httpsAgentFixed = createOptimizedAgent(true, true);
  const httpAgentFixed = createOptimizedAgent(false, true);
  console.log('‚úÖ Agentes HTTP/HTTPS com IP fixo criados com sucesso');
} catch (error) {
  console.log('‚ùå Erro criando agentes:', error.message);
}

console.log('\n4. üìã RESUMO DAS CONFIGURA√á√ïES IMPLEMENTADAS:');
console.log('   ‚úÖ IP FIXO: Detecta RAILWAY_FIXED_IP ou NGROK_IP_FIXO');
console.log('   ‚úÖ COINSTATS: √önica fonte para Fear&Greed e BTC Dominance');
console.log('   ‚úÖ BINANCE: √önica fonte para Market Pulse TOP100 (com IP fixo)');
console.log('   ‚úÖ BYBIT: Fallback para Market Pulse (com IP fixo)');
console.log('   ‚úÖ Agentes HTTP/HTTPS configurados com localAddress');

console.log('\n5. üöÄ PR√ìXIMOS PASSOS:');
console.log('   1. Configure a vari√°vel RAILWAY_FIXED_IP no Railway');
console.log('   2. Deploy o c√≥digo atualizado');
console.log('   3. Monitore os logs para "IP FIXO DETECTADO"');
console.log('   4. Verifique se n√£o h√° mais erros 403/451');

console.log('\nüéØ TESTE CONCLU√çDO!');
